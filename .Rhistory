library(agricolae)
dates <- c(14,21,28)
dates
severity <- c(40,80,90)
severity
audpc(severity,dates)
nomes
library(agricolae)
dates <- c(14,21,28)
dates
severity <- c(40,80,90)
severity
audpc(severity,dates)
nomes
library(agricolae)
dates <- c(14,21,28)
dates
severity <- c(40,80,90)
severity
audpc(severity,dates)
nomes
library(agricolae)
dates <- c(14,21,28)
dates
severity <- c(40,80,90)
severity
audpc(severity,dates)
Orange
data("corn")
str(corn)
library(tidyverse)
dates <- c(7,14,21,28,35,42)
severity2 <- c(0.1,5,10,35,50,60)
data_curva
# Chunk 1
1 + 1
# Chunk 2
2 + 2
# Chunk 3
#| echo: false
2 * 2
# Chunk 4
dados <- Orange
dados
plot(dados$circumference)
# Chunk 5
circ <- dados$circumference
circ
circ2 <- log(circ)
circ2
dados
dados$logcirc <- log(dados$circumference)
dados
# Chunk 6
library(agricolae)
dates <- c(14,21,28)
dates
severity <- c(40,80,90)
severity
audpc(severity,dates)
nomes
library(tidyverse)
library(readxl)
library(gsheet)
library(dplyr)
dados <- read_excel("dados-diversos.xlsx",
sheet = "sensibilidade_fungicidas")
dados <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=373270992#gid=373270992")
survey = gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=1118819738#gid=1118819738")
library(janitor)
survey_b = survey |>
group_by(state, species, year) |>
mutate(n = n())
survey_b |>
tabyl(state, species, year)
survey_b |>
group_by(year, species) |>
count() |>
ggplot(aes(year, n, fill = species,
color = species))+
geom_col()+
scale_fill_viridis_d()
#scale_fill_manual(values = c("red", "blue"))
#facet_wrap(~year)
mg <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=983033137#gid=983033137")
library(ggthemes)
plot_mg <- mg |>
ggplot(aes(trat, comp))+
geom_boxplot(fill = "darkgreen",
outlier.color = NA)+
geom_jitter(width = 0.1, color = "gray50")+
scale_y_continuous(limits = c(0,20))+
labs(x = "Tratamentos",
y = "Comprimento (mm)",
title = "Efeito do Magnésio",
subtitle = "Tamanho da lesão de mancha parda")+
theme_clean()
#theme_classic(base_size = 14)
ggsave("box.png", bg = "white", width = 4, height = 4)
micelial <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit?gid=959387827#gid=959387827")
plot_micelial <- micelial |>
ggplot(aes(reorder(especie, tcm), tcm))+
geom_boxplot(outlier.colour = NA)+
geom_jitter(width = 0.1, color = "gray20")+
coord_flip()+
labs(x = "", y = "Taxa de crescimento micelial (mm/dia)")+
theme_clean()
library(patchwork)
(plot_mg | plot_micelial) +
plot_annotation(tag_levels = "A")
ggsave("combo1.png", bg = "white",
width = 8, height = 4)
library(agricolae)
library(tidyverse)
# Definindo datas e severidade de uma curva simulada
dates <- c(7, 14, 21, 28, 35, 42)
severity <- c(0.1, 5, 10, 35, 50, 60)
# Criando um data frame com as datas e severidade
data_curva <- data.frame(dates, severity)
# Usando o operador |> (pipe) para aplicar funções de forma sequencial
# Criamos uma nova coluna chamada 'severity2' com dados ajustados para visualização
data_curva |>
mutate(severity2 = c(1, 10, 35, 58, 70, 79)) |>
ggplot(aes(dates, severity2)) +  # Mapeamento estético: eixo x = datas, eixo y = severidade2
geom_area(fill = "blue") +       # Área sob a curva (cor azul)
geom_line(linewidth = 2, color = "red") +  # Linha vermelha grossa
geom_point(size = 4, color = "yellow") +   # Pontos de avaliação (amarelos)
labs(x = "Dias após o plantio", y = "Severidade") +  # Rótulos dos eixos
scale_y_continuous(limits = c(0, 100))     # Limite do eixo y de 0 a 100
# Explorando conjunto de dados de exemplo (incluso no pacote agricolae)
data(corn)  # dataset com dados simulados de milho
str(corn)   # estrutura do objeto 'corn'
library(agricolae)
library(tidyverse)
# Vetor com as datas das avaliações da doença (em dias após o plantio)
dates <- c(14,21,28)
dates
# Severidade da doença em cada data correspondente
severity <- c(40,80,90)
severity
# Cálculo da AUDPC com base nos valores de severidade e datas
audpc(severity, dates, type = "absolute")
# type = "absolute" calcula a área total sob a curva (sem normalizar)
# Definindo datas e severidade de uma curva simulada
dates <- c(7, 14, 21, 28, 35, 42)
severity <- c(0.1, 5, 10, 35, 50, 60)
# Criando um data frame com as datas e severidade
data_curva <- data.frame(dates, severity)
# Usando o operador |> (pipe) para aplicar funções de forma sequencial
# Criamos uma nova coluna chamada 'severity2' com dados ajustados para visualização
data_curva |>
mutate(severity2 = c(1, 10, 35, 58, 70, 79)) |>
ggplot(aes(dates, severity2)) +  # Mapeamento estético: eixo x = datas, eixo y = severidade2
geom_area(fill = "blue") +       # Área sob a curva (cor azul)
geom_line(linewidth = 2, color = "red") +  # Linha vermelha grossa
geom_point(size = 4, color = "yellow") +   # Pontos de avaliação (amarelos)
labs(x = "Dias após o plantio", y = "Severidade") +  # Rótulos dos eixos
scale_y_continuous(limits = c(0, 100))     # Limite do eixo y de 0 a 100
## aula 30/04
library(readxl)
campo <- readxl::read_excel("dados-diversos.xlsx", sheet = "fungicida_campo")
campo$TRAT <- factor(campo$TRAT)
campo$BLOCO <- factor(campo$BLOCO)
m_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)
anova(m_campo)
library(DHARMa)
plot(simulate_residuals(m_campo))
means_campo <- emmeans(m_campo, ~ TRAT, type = "response")
means_campo
cv.model(m_campo)
plot(means_campo)
library(multcomp)
cld(means_campo) #tratamento 6 é o único que se diferencia
pwpm(means_campo) #função pwpm faz comparações em uma matriz
cor(campo$FER, campo$PROD)
cor.test(campo$FER, campo$DFC)
campo |>
ggplot(aes(FER, DFC))+
geom_point()+
geom_smooth(method = 'lm')
campo |>
ggplot(aes(TRAT, PROD))+
geom_jitter(width = 0.1)+
stat_summary(fun.data = 'mean_cl_boot', colour = 'red', width = 0.3)
campo$TRAT <- factor(campo$TRAT)
campo$BLOCO <- factor(campo$BLOCO)
m_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)
anova(m_campo)
library(DHARMa)
plot(simulate_residuals(m_campo))
means_campo <- emmeans(m_campo, ~ TRAT, type = "response")
means_campo
cv.model(m_campo)
plot(means_campo)
library(multcomp)
cld(means_campo) #tratamento 6 é o único que se diferencia
pwpm(means_campo) #função pwpm faz comparações em uma matriz
milho <- readxl::read_excel("dados-diversos.xlsx", sheet = "milho")
# blocos e parcelas
# parcial subdivididas
milho |>
ggplot(aes(hybrid, index, color = method))+
geom_jitter(width = 0.1)+
coord_flip()+
facet_wrap(~ method)
milho$hybrid_block <- interaction(milho$hybrid, milho$block)
milho |>
mutate(hybrid_block = interaction(hybrid,block))
# duas formas de modificar -encontrar o identificador de cada hibrido
library(lme4)
m_milho <- lmer(index ~ hybrid*method + (1 | block:hybrid_block), data = milho)
car::Anova(m_milho)
plot(simulateResiduals(m_milho))
# usar o lmer para variáveis aleatórias, o modelo lm considera variáveis fixas
media_milho <- emmeans(m_milho, ~ method | hybrid)
cld(media_milho, Letters = letters)
# método pin discrima mais que o método silk
## para yield:
m_milho <- lmer(yield ~ hybrid*method + (1 | block:hybrid_block), data = milho)
car::Anova(m_milho)
plot(simulateResiduals(m_milho))
media_milho <- emmeans(m_milho, ~ method | hybrid)
cld(media_milho, Letters = letters)
### RELAÇÃO DE INDEX E YIELD
milho |>
ggplot(aes(index, yield))+
geom_point()+
geom_smooth(method = 'lm')
## coeficiente de determinação mostra a variação de x em função de y
cor1 <- cor(milho$index, milho$yield)
cor1*cor1*100
# valor muito baixo está indicando que a relação entre eles é baixa
cor.test(milho$index, milho$yield)
# testa a hipótese de associaçao entre as duas variáveis e mostra se ela é significativa
library(emmeans)
means_campo <- emmeans(m_campo, ~ TRAT, type = "response")
means_campo
cv.model(m_campo)
plot(means_campo)
library(multcomp)
cld(means_campo) #tratamento 6 é o único que se diferencia
pwpm(means_campo) #função pwpm faz comparações em uma matriz
milho <- readxl::read_excel("dados-diversos.xlsx", sheet = "milho")
# blocos e parcelas
# parcial subdivididas
milho |>
ggplot(aes(hybrid, index, color = method))+
geom_jitter(width = 0.1)+
coord_flip()+
facet_wrap(~ method)
milho$hybrid_block <- interaction(milho$hybrid, milho$block)
milho |>
mutate(hybrid_block = interaction(hybrid,block))
# duas formas de modificar -encontrar o identificador de cada hibrido
library(lme4)
m_milho <- lmer(index ~ hybrid*method + (1 | block:hybrid_block), data = milho)
car::Anova(m_milho)
plot(simulateResiduals(m_milho))
# usar o lmer para variáveis aleatórias, o modelo lm considera variáveis fixas
media_milho <- emmeans(m_milho, ~ method | hybrid)
cld(media_milho, Letters = letters)
# método pin discrima mais que o método silk
## para yield:
m_milho <- lmer(yield ~ hybrid*method + (1 | block:hybrid_block), data = milho)
car::Anova(m_milho)
plot(simulateResiduals(m_milho))
media_milho <- emmeans(m_milho, ~ method | hybrid)
cld(media_milho, Letters = letters)
### RELAÇÃO DE INDEX E YIELD
milho |>
ggplot(aes(index, yield))+
geom_point()+
geom_smooth(method = 'lm')
## coeficiente de determinação mostra a variação de x em função de y
cor1 <- cor(milho$index, milho$yield)
cor1*cor1*100
# valor muito baixo está indicando que a relação entre eles é baixa
cor.test(milho$index, milho$yield)
# testa a hipótese de associaçao entre as duas variáveis e mostra se ela é significativa
library(DHARMa)
plot(simulate_residuals(m_campo))
library(DHARMa)
plot(simulate_residuals(m_campo))
campo$TRAT <- factor(campo$TRAT)
campo$BLOCO <- factor(campo$BLOCO)
m_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)
anova(m_campo)
plot(simulate_residuals(m_campo))
## aula 30/04
library(readxl)
campo <- readxl::read_excel("dados-diversos.xlsx", sheet = "fungicida_campo")
campo$TRAT <- factor(campo$TRAT)
campo$BLOCO <- factor(campo$BLOCO)
m_campo <- lm(log(FER) ~ BLOCO + TRAT, data = campo)
anova(m_campo)
library(tidyverse)
library(DHARMa)
plot(simulate_residuals(m_campo))
means_campo <- emmeans(m_campo, ~ TRAT, type = "response")
means_campo
cv.model(m_campo)
plot(means_campo)
library(multcomp)
cld(means_campo) #tratamento 6 é o único que se diferencia
pwpm(means_campo) #função pwpm faz comparações em uma matriz
library(DHARMa)
plot(simulate_residuals(m_campo))
